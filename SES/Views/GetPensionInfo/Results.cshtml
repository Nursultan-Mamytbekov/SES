@model SES.Services.Soap.ServiceReference.PensionInfoWithSumResponse
@using SES.Data.Entities
@{
    ViewData["Title"] = "Results";
    var state = (PensionState?)Model.PensionInfo.PinInfos[0].State ?? null;
}
<div>
    <div class="container">
        <h4>Информация о пенсионере</h4>
        <table id="personTable" class="table table-sm table-bordered mt-3">
            <tr>
                <th class="w-25">@Html.DisplayName("ПИН")</th>
                <td>@Html.DisplayFor(model => model.PensionInfo.PinInfos[0].PIN)</td>
            </tr>
            <tr>
                <th>@Html.DisplayName("Фамилия")</th>
                <td>@Html.DisplayFor(model => model.PensionInfo.PinInfos[0].LastName)</td>
            </tr>
            <tr>
                <th>@Html.DisplayName("Имя")</th>
                <td>@Html.DisplayFor(model => model.PensionInfo.PinInfos[0].FirstName)</td>
            </tr>
            <tr>
                <th>@Html.DisplayName("Отчество")</th>
                <td>@Html.DisplayFor(model => model.PensionInfo.PinInfos[0].FullName)</td>
            </tr>
            <tr>
                <th>@Html.DisplayName("Статус")</th>
                <td>@Html.DisplayFor(model => state)</td>
            </tr>
        </table>
        <h4>Информация о начислениях страховых взносов</h4>
        <table id="pensionTable" class="table table-sm table-bordered mt-3">
            <thead>
                <tr>
                    <th>Работадатель</th>
                    <th>Дата назначения пенсии</th>
                    <th>Дата прекращения пенсии</th>
                    <th>Сумма пенсии</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.PensionInfo.DossierInfos)
                {
                    <tr>
                        <td>@Html.DisplayFor(model => item.NumDossier)</td>
                        <td>@Html.DisplayFor(model => item.DateFromInitial)</td>
                        <td>@Html.DisplayFor(model => item.DateTo)</td>
                        <td>@Html.DisplayFor(model => item.Sum)</td>
                    </tr>
                }
            </tbody>
        </table>
        <button type="button" onclick="getData();" class="btn btn-sm btn-success">Печать</button>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.69/pdfmake.min.js" integrity="sha512-3O/98mQR8VAbnoxtu0U5RFMeKwxzBXFzLtbGUVdvvnRYvXI7iQ64BrtatgIdsz4jHzs/MypLonFGfOdC0W5xHQ==" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.69/vfs_fonts.min.js" integrity="sha512-VIF8OqBWob/wmCvrcQs27IrQWwgr3g+iA4QQ4hH/YeuYBIoAUluiwr/NX5WQAQgUaVx39hs6l05cEOIGEB+dmA==" crossorigin="anonymous"></script>
    <script>

        function getData() {
            let personTable = document.getElementById('personTable');
            let personData = [...personTable.rows].map(t => [...t.children].map(u => u.innerText));
            let pensionTable = document.getElementById('pensionTable');
            let pensionData = [...pensionTable.rows].map(t => [...t.children].map(u => u.innerText));
            GeneratePdf(personData, pensionData);
        }

        function GeneratePdf(personData, pensionData) {
            var docDefinition = {
                header: {
                    text: "Сведения из ГРС",
                    alignment: 'center',
                    margin: [20, 20, 20, 20]
                },
                content: [
                    {
                        table: {
                            // headers are automatically repeated if the table spans over multiple pages
                            // you can declare how many rows should be treated as headers
                            headerRows: 1,
                            widths: ['25%', '75%'],

                            body: personData,
                        },
                        fontSize: 12
                    },
                    {
                        table: {
                            // headers are automatically repeated if the table spans over multiple pages
                            // you can declare how many rows should be treated as headers
                            headerRows: 1,
                            widths: ['25%', '25%', '25%', '25%'],

                            body: pensionData,
                        },
                        fontSize: 12,
                        margin: [0, 20, 0, 0]
                    }
                ],

                pageSize: 'A4',
                //pageOrientation: 'landscape',
                pageMargins: [50, 50, 60, 30]
            }

            pdfMake.createPdf(docDefinition).open();
            console.log("success")
        }
    </script>
}

